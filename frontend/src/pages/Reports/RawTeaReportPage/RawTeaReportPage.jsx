import React, { useState } from 'react';
import { TextField, Button, Select, MenuItem, Table, TableHead, TableRow, TableCell, TableBody, Pagination } from '@mui/material';
import { format } from 'date-fns';

export default function RawTeaReportPage() {
  const [fromDate, setFromDate] = useState('');
  const [toDate, setToDate] = useState('');
  const [route, setRoute] = useState('');
  const [reportData, setReportData] = useState([]);
  const [page, setPage] = useState(1);
  const [totalRandalu, setTotalRandalu] = useState(0);
  const [totalGreenTea, setTotalGreenTea] = useState(0);
  const [generatedBy, setGeneratedBy] = useState({ id: 'EMP001', name: 'John Doe' });

  const fetchReport = async () => {
    const res = await fetch(`/api/reports/raw-tea?fromDate=${fromDate}&toDate=${toDate}&route=${route}&page=${page}&limit=10`);
    const data = await res.json();
    setReportData(data);

    // Calculate totals
    let randaluSum = 0, greenTeaSum = 0;
    data.forEach(item => {
      randaluSum += item.randalu_weight;
      greenTeaSum += item.green_tea_weight;
    });
    setTotalRandalu(randaluSum);
    setTotalGreenTea(greenTeaSum);
  };

  return (
    <div style={{ padding: 20 }}>
      <h2>Raw Tea Delivery Report</h2>

      {/* Filters */}
      <div style={{ marginBottom: 20 }}>
        <TextField
          type="date"
          label="From Date"
          value={fromDate}
          onChange={e => setFromDate(e.target.value)}
          InputLabelProps={{ shrink: true }}
          style={{ marginRight: 10 }}
        />
        <TextField
          type="date"
          label="To Date"
          value={toDate}
          onChange={e => setToDate(e.target.value)}
          InputLabelProps={{ shrink: true }}
          style={{ marginRight: 10 }}
        />
        <Select
          value={route}
          onChange={e => setRoute(e.target.value)}
          displayEmpty
          style={{ width: 150, marginRight: 10 }}
        >
          <MenuItem value="">Select Route</MenuItem>
          <MenuItem value="Route A">Route A</MenuItem>
          <MenuItem value="Route B">Route B</MenuItem>
          {/* Add more routes */}
        </Select>
        <Button variant="contained" onClick={fetchReport}>Generate Report</Button>
      </div>

      {/* Report Generated Info */}
      <div style={{ marginBottom: 10 }}>
        Report generated on: {format(new Date(), 'yyyy-MM-dd')} <br />
        Generated by: {generatedBy.id} - {generatedBy.name}
      </div>

      {/* Table */}
      <Table>
        <TableHead>
          <TableRow>
            <TableCell>Date</TableCell>
            <TableCell>Route</TableCell>
            <TableCell>Randalu Weight</TableCell>
            <TableCell>Green Tea Weight</TableCell>
            <TableCell>Total Raw Tea</TableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          {reportData.map((row, index) => (
            <TableRow key={index}>
              <TableCell>{row.date}</TableCell>
              <TableCell>{row.route}</TableCell>
              <TableCell>{row.randalu_weight}</TableCell>
              <TableCell>{row.green_tea_weight}</TableCell>
              <TableCell>{row.randalu_weight + row.green_tea_weight}</TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>

      {/* Pagination */}
      <Pagination count={5} page={page} onChange={(e, value) => setPage(value)} style={{ marginTop: 20 }} />

      {/* Totals */}
      <div style={{ marginTop: 20 }}>
        <h4>Totals</h4>
        <p>Total Randalu Weight: {totalRandalu}</p>
        <p>Total Green Tea Weight: {totalGreenTea}</p>
        <p><b>Total Raw Tea Weight: {totalRandalu + totalGreenTea}</b></p>
      </div>
    </div>
  );
}
